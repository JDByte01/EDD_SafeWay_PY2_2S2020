/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import edd_safeway.GrafoController;
import edd_safeway.InvoiceController;
import edd_safeway.Lugar;
import edd_safeway.PlaceController;
import edd_safeway.TravelController;
import edd_safeway.UserController;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.JComponent;
import javax.swing.JEditorPane;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

/**
 *
 * @author JOSED
 */
public class MapView extends javax.swing.JFrame {

    private String puntoA, puntoB;
    private double monto, peso;
    private int userId;
    
    private GrafoController grafoController;
    private TravelController travelConroller;
    private InvoiceController invoiceController;
    private UserController userController;
    private PlaceController placeController;
    /**
     * Creates new form MapView
     */
    public MapView() {
        initComponents();
        this.puntoA = "";
        this.puntoB = "";
        this.userId = 0;
        this.monto = 0.0;
        this.peso = 0.0;
        this.grafoController = GrafoController.getInstance();
        this.travelConroller = TravelController.getInstance();
        this.invoiceController = InvoiceController.getInstance();
        this.userController = UserController.getInstance();
        this.placeController = PlaceController.getInstance();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_confirmar = new javax.swing.JButton();
        label_costo = new javax.swing.JLabel();
        label_peso = new javax.swing.JLabel();
        btn_cancelar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        label_ruta = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btn_confirmar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_confirmar.setText("Confirmar viaje");
        btn_confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmarActionPerformed(evt);
            }
        });

        label_costo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        label_costo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_costo.setText("Total: Q254.20");

        label_peso.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        label_peso.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_peso.setText("Peso: 52.5");
        label_peso.setToolTipText("");

        btn_cancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.setToolTipText("");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_peso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label_costo, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_confirmar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_cancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_confirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(label_peso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_costo)))
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Ruta:");

        label_ruta.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label_ruta.setText("Villa nueva \\nnueva casa\\n etc");
        label_ruta.setToolTipText("");
        label_ruta.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label_ruta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_ruta)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        
        //Btn cancelar
        this.dispose();
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_confirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_confirmarActionPerformed
        
        System.out.println(" ** Confirmando viaje... espera a que un conductor acepte el viaje...");
        //Btn confirmar
        
        //1- Guardar viaje
        int indexTravel = travelConroller.addTravelMap(puntoA, puntoB);
        
        //1- Guardar factura con los datos, sin el conductor
        int indexInvoice = invoiceController.addInkvoiceMap(userId, indexTravel, monto);
        
        //3- Añadir el id al invoiceList del usuario
        
        userController.addUserInvoice(userId, indexInvoice);
        
        JOptionPane.showMessageDialog(this, "El conductor llegara pronto...");
        this.dispose();
        
        
        //Agregar en una lista para su confirmación con el conductor
    }//GEN-LAST:event_btn_confirmarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MapView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MapView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MapView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MapView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MapView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_confirmar;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel label_costo;
    private javax.swing.JLabel label_peso;
    private javax.swing.JLabel label_ruta;
    // End of variables declaration//GEN-END:variables

    public void setPuntos(String puntoA, String puntoB, int userId){
        
        //String pagina ="https://maps.googleapis.com/maps/api/staticmap?center=40.718217,-73.998284&zoom=13&size=600x300&maptype=roadmap8&markers=color:red%7Clabel:A%7C40.718217,-73.998284&markers=color:red%7Clabel:B%7C40.702147,-74.015794&key=AIzaSyCOgY_KsV_Bv1yOhYOdioVgLYGz-kfv654";
        this.puntoA = puntoA;
        this.puntoB = puntoB;
        this.userId = userId;
        
//        ArrayList<String> lista = grafoController.getCamino(puntoA, puntoB); //Error de recursividad
        boolean flag = grafoController.getPesoCosto(puntoA, puntoB);
        if(flag){
            this.peso = grafoController.getPeso();
            this.monto = grafoController.getCosto();
        }
        
        if(this.peso == Double.MAX_VALUE){
            //No se puede hacer el viaje
            this.label_ruta.setText(" **NO SE PUEDE REALIZAR EL VIAJE, NO HAY CAMINO DISPONIBLE ENTRE LOS DOS PUNTOS ");
            this.label_costo.setText("Total: Q0.00 ");
            this.label_peso.setText("Peso: infinito oo ");
            this.btn_confirmar.setEnabled(false);
        } else {
            //Mostrar ruta
            String ruta = "["+puntoA+" -> "+puntoB+"]";
    //        ruta = lista.stream().map((s) -> ", " + s).reduce(ruta, String::concat); //Error de recursividad

            this.label_ruta.setText(ruta);
            this.label_costo.setText("Total: Q"+this.monto);
            this.label_peso.setText("Peso: "+this.peso);
            
            try {
                Lugar inicio = placeController.getPlace(puntoA);
                Lugar destino = placeController.getPlace(puntoB);
                
                String m_marker1, m_marker2;
                        
                String m_header = "https://maps.googleapis.com/maps/api/staticmap?";
                String m_center = "center="+inicio.getLatitud()+","+inicio.getLongitud();
                String m_options = "&zoom=15&size=900x900&maptype=roadmap8";
                
                if(inicio != null){
                    m_marker1 = "&markers=color:red%7Clabel:A%"+inicio.getLatitud()+","+inicio.getLongitud();
                } else {
                    m_marker1 = "";
                }
                
                if(destino != null){
                    m_marker2 = "&markers=color:red%7Clabel:B%"+destino.getLatitud()+","+destino.getLongitud();
                }else {
                    m_marker2 = "";
                }
                
                String m_key = "&key=AIzaSyCOgY_KsV_Bv1yOhYOdioVgLYGz-kfv654";
                String txt = m_header + m_center + m_options + m_marker1 + m_marker2 + m_key;
                
                System.out.println("Ruta: " + txt);
                crearMapa(txt);
            } catch (Exception e) {
                System.out.println("No se pudo mostrar el mapa: " + e);
            }
            
        }
    }
    
    private void crearMapa(String pagina) throws MalformedURLException, IOException{
        //Mostrar map

            URL url = new URL(pagina);
            final ImageComponent img = new ImageComponent(url);
            
            JFrame frame = new JFrame("Test");
            frame.add(new JScrollPane(img));

            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frame.setSize(900, 900);
            frame.setVisible(true);
    }

}

class ImageComponent extends JComponent {
       private final BufferedImage img;

       public ImageComponent(URL url) throws IOException {
           img = ImageIO.read(url);
           setPreferredSize(new Dimension(img.getWidth(), img.getHeight()));

       }

       @Override protected void paintComponent(Graphics g) {
           super.paintComponent(g);
           g.drawImage(img, 0, 0, img.getWidth(), img.getHeight(), this);

       }
}
